GPU Instancer v0.9.9
Copyright Â©2018 GurBu Technologies
---------------------------------
Thank you for supporting GPU Instancer!

---------------------------------
DOCUMENTATION
---------------------------------
Please read our online documentation for more in-depth explanations and customization options at:
http://www.gurbu.com/

---------------------------------
SETUP
---------------------------------
1. Add the desired Managers to your scene

1.1. Add Prefab Manager
Tools -> GPU Instancer -> Add Prefab Manager

1.2. Add Detail Managers to your scene (Requires at least one Unity terrain present in the scene)
Tools -> GPU Instancer -> Add Detail Manager For Terrains

1.3. Add Tree Managers to your scene (Requires at least one Unity terrain present in the scene)
Tools -> GPU Instancer -> Add Tree Manager For Terrains

2. In the Inspector window, press the "?" button at the top-right corner to get detailed information about setting up the manager.

Tools
---------------------------------
Tools -> GPU Instancer -> Scene Prefab Importer
The Scene Prefab Importer is designed to easily define prefabs from the existing prefab instances in your scenes to the GPUI Prefab Manager as prototypes.

Tools -> GPU Instancer -> Prefab Replacer
Replaces the selected GameObjects in the scene hierarchy with the selected prefab as instances of that prefab.

Tools -> GPU Instancer -> Clear Shader Bindings
Clears the references of shader generated by GPU Instancer, and optionally deletes them.

---------------------------------
SUPPORT
---------------------------------
If you have any questions, requests or bug reports, please email us at: support@gurbu.com
Unity Forum Thread: https://forum.unity.com/threads/gpu-instancer.529746/

---------------------------------
DESCRIPTION
---------------------------------
GPU Instancer is an out of the box solution to display extreme numbers of objects on screen with high performance. 
With a few mouse clicks, you can instance your prefabs and Unity terrain details and trees.

GPU Instancer provides user friendly tools to allow everyone to use Indirect GPU Instancing without having to go through 
the deep learning curve of Compute Shaders and GPU infrastructure. Also, an API with extensive documentation is provided 
to manage runtime changes.

To provide the fastest possible performance, GPU Instancer utilizes Indirect GPU Instancing using Unity's 
DrawMeshInstancedIndirect method and Compute Shaders.

GPU Instancing results in magnitudes of performance improvement over static batching and mesh combining. Also, other available 
solutions for GPU Instancing (including Unity's material option and the DrawMeshInstanced method) fail short on limited buffer 
sizes and therefore result in more draw calls and less performance. By using the indirect method GPU Instancer aims to provide 
the ultimate solution for this, and increases performance considerably while rendering the same mesh multiple times.

GPU Instancer consists of three main Monobehavior classes named "GPU Instancer Prefab Manager", "GPU Insancer Detail Manager" and  "GPU Insancer Tree Manager".

GPU Instancer Prefab Manager
---------------------------------
By adding your prefabs to the Prefab Manager, the prefab instances you add to your scenes are automatically rendered by GPU Instancer.
It also provides additional functionality such as adding/removing instances at runtime, changing material properties per instance, 
and enabling/disabling GPU Instancing and Rigidbodies on instanced objects (at a specified area) at runtime.

Note that prefab manager only accepts user created prefabs. It will not accept prefabs that are generated when importing your 3D model assets.

GPU Instancer Detail Manager
---------------------------------
Detail Manager takes over rendering of detail prototypes added to your Unity terrain.
It comes with a grass shader which gives you the ability to customize how your grass will look on your terrain with a set of shader 
properties that can be edited from the manager.

GPU Instancer Tree Manager
---------------------------------
Tree Manager takes over rendering of tree prototypes added to your Unity terrain. Billboards are automatically generated for Trees and added as the 
final LOD level in the prototype's rendering pipeline.

---------------------------------
FEATURES
---------------------------------
- Out of the box solution for complex GPU Instancing.
- VR compatible. Works with both single pass and multipass rendering modes.
- Mobile compatible. Works with both iOS and Android.
- Easy to use interface.
- Tens of thousands of objects rendered lightning fast in a single draw call.
- GPU frustum culling.
- GPU occlusion culling (non-VR platforms only).
- Automatically configured custom shader support.
- Supports HDRP and LWRP render pipelines.
- Complex hierarchies of prefabs instanced with a single click.
- Multiple sub-meshes support.
- LOD Groups and cross-fading support (with animation or fade transition width).
- Automatic 2D Billboard generation system (auto-added as last LOD).
- Shadows casting and receiving support for instances (frustum culled instances still can cast shadows).
- Ability to use custom shadow distance per prototype and to choose the LOD to render shadows with.
- Unity 5.6 support.
- Well documented API for procedural scenes and runtime modifications (examples included).
- Ability to Remove instances inside bounds or colliders at runtime.
- Ability to extend with custom Compute Shaders.
- Example scenes that showcase GPU Instancer capabilities.

Prefab Instancing Features:
- Ability to automatically instance prefabs at your scene that you distribute with your favorite prefab painting tool.
- Automatically Add-Remove prefab instances without any aditional code.
- Automatic detection and updating of transform position, rotation and scale changes.
- Full or area localized rigidbody and physics support.
- Nested Prefabs support (Unity 2018.3 and later).
- Add-Remove-Update prefab instances with or without instantiating GameObjects (examples included).
- Instance based material variations through API (similar to Material Property Blocks).
- Enabling and disabling instancing at runtime per instance basis.
- API to manage instanced prefabs at runtime.
- Includes mobile demo scene with custom controllers.

Detail Instancing Features:
- Dense grass fields and vegetation with very high frame rates.
- Included vegetation shader with wind, shadows, AO, billboarding and various other properties.
- Support for custom shaders and materials.
- Cross quadding support: automatically turns grass textures to crossed quads.
- Ability to paint prefabs with custom materials on Unity terrain (with Unity terrain tools).
- Ability to use prefabs with LOD Groups on Unity terrain.
- Further performance improvements with automatic spatial partitioning.
- API to manage instanced terrain detail prototypes at runtime (examples included).
- Editor GPU Instancing simulation. 

Tree Instancing Features:
- Dense forests with very high frame rates.
- Speed Tree support with wind animations.
- Tree Creator support with wind animations.
- Included billboard baker and renderers.


Third Party Integrations:
- Gaia integration.
- Map Magic integration.

Planned Features:
- Support for animation baking and skinned mesh renderers.

---------------------------------
MINIMUM REQUIREMENTS
---------------------------------
- DirectX 11 or DirectX 12 and Shader Model 5.0 GPU (Windows, Windows Store)
- Metal (macOS, iOS)
- OpenGL Core 4.3 (Windows, Linux)
- Vulkan (Android, Windows, Linux)
- OpenGL ES 3.1 (Android 8.0 Oreo or later)
- Modern Consoles (PS4, Xbox One)

---------------------------------
LIGHTING LIMITATIONS
---------------------------------
- Baked Global Illumination is not supported for instanced prototypes.
- Only for Unity versions prior to 2018.2.0f2: In forward rendering mode, only directional and ambient lights are supported for instanced prototypes. 
  (This limitation does not apply to deferred rendering mode.)

---------------------------------
DEMO SCENES
---------------------------------
You can find demo scenes that showcase GPU Instancer capabilities in the "GPUInstancer/Demos" folder. 
These scenes are only for demonstration and you can safely remove this folder from your builds.
Some demos also have a "PostProcessing" folder. For best visual results, you can add a "Post-Processing Behavior" 
script to the scene cameras and add the setting object to this script from this folder.

---------------------------------
CHANGE LOG
---------------------------------

v0.9.9

New: Threading option for Detail Manager initialization
New: Option to disable Mesh Renderers on prefabs to increase initialization speed
New: Prefab streaming system with PrefabListRuntimeHandler component
New: Added an option to all billboards to face camera position (ignoring camera View Matrix rotations, ideal for VR)
New: Min. Culling Distance option per prototype
New: Option to filter prototypes when removing instances with colliders or bounds
New: MapMagic Integration single Prefab Manager option
New: MapMagic Integration Threading option for Prefabs when using single Prefab Manager with disabled Mesh Renderers
New: Added GetDetailMapData/SetDetailMapData API methods for Detail Manager

Changed: SetGlobalPositionOffset null checks and warnings added
Changed: AddPrefabInstance method optimization when automatically increasing buffer size

Fixed: Tree Proxy not being created when using no-GameObject workflow
Fixed: Tree Proxy not being cleared when proxy GameObject is destroyed
Fixed: Built-in shader source code not recognized without updating material when first added to project
Fixed: Prototype preview icon lighting problem for Unity 2017 on Linear color space
Fixed: Cross-fade method error on shaders when building in Unity 5.6 versions
Fixed: Possible memory leak on repeated initialization for visibility buffer
Fixed: SetGlobalPositionOffset not updating spatial partitions on Detail Manager
Fixes: GPUInstancerInclude PSSL dot method casting error when building for PS4

v0.9.8

New: Managers can now continue rendering in Scene View camera while the editor is paused
New: All managers and tools now have "Wiki" buttons that will take you to their respective documentation pages
New: Tree Managers now have an option to disable the random rotation of trees on Unity terrains

Changed: Automatic shader conversion update for LWRP/HDRP 4.3.0 version
Changed: Menu items moved under Tools
Changed: The way prototype previews are displayed
Changed: The GPUI Soft Occlusion Shader is renewed to match the original Nature/Soft Occlusion Shaders better
Changed: Billboard Generator brightness option has been modified to match the original colors better when brightening

Fixed: GPUIStandardInclude.cginc errors on some Unity 2017.2 versions
Fixed: Standard Shader Cutout variant not showing in build
Fixed: Meshes with a single submesh but multiple materials causing issues in rendering
Fixed: LOD cross-fading results changing with time scale

v0.9.7

New: Added Render With Selected Camera option to limit rendering to one camera
New: Added Detail Texture Layer option to Detail Manager
New: Added support for the internal "Standard (Roughness setup)" shader
New: Added option to use frustum and occlusion culling for shadows
New: Added UpdateVariation API method to update variation buffer at runtime
New: Added a new demo scene that showcases the use of custom compute shaders to extend GPUI

Changed: Managers now show the Unity Archive link to download built-in shaders, if necessary
Changed: Improved the CPU times when handling transform changes

Fixed: Billboards not using the original prefab's Layer
Fixed: SpeedTrees without BillboardRenderer not showing billboard distance options
Fixed: Standard shader error for Unity 2017.3 versions
Fixed: Billboard renderer causing a minor artifact in forward rendering and single-pass VR when there is a CommandBuffer using the depth texture
Fixed: A bug that would prevent builds from Unity 2018.3 beta versions 

v0.9.6

New: Added a grass mower model and grass mowing mode for the detail instancing scene
New: Added shadow casting option for custom billboards

Fixed: Possible initialization problems when having multiple prototypes with no-gameobjects
Fixed: Manager showing as initialized before gpu buffers are generated
Fixed: MapMagic integration missing min. culling distance setting

v0.9.5:

New: Nested-Prefabs support (Unity 2018.3 and later)
New: Tree instancing demo scene
New: Optional minimum culling distance setting
New: Shadow Distance option per prototype
New: Shadow LOD options
New: Clear Shader Bindings menu item
New: Prefab Replacer tool for easily replacing GameObjects in scene with prefab instances
New: Brightness setting for baked billboard textures
New: Added a cutoff override option for the billboard generator

Changed: Shader conversion automatically disables other procedural instancing setups to enable GPUI support for various shader assets
Changed: Internal shaders are now marked hidden to remove clutter

Fixed: An error in 2018.3 Beta where an issue with the way DateTime worked caused the managers to re-convert shaders
Fixed: Billboard normal atlas dilation causing bright outlines
Fixed: TreeCreator billboard material properties and reversed normals issue
Fixed: Shader conversion error when project is updated while the Manager is running in editor
Fixed: Wrong bounds calculation when first mesh in a prefab is scaled
Fixed: Standard (Specular) shader now works with LOD cross-fading

v0.9.4:

New: Tree instantiation calculations are made in Compute Shaders for better performance

Changed: Automatically create GPUI supported version for custom billboard shader

Fixed: Map Magic integration not adding Tree Manager for pinned terrains

v0.9.3:

New: API Method to remove instances inside a given Bounds or Collider
New: Added grass removal function to Detail Instancing Demo
New: Added Instance Remover script which removes instances based on colliders of the object when initialized
New: Support for Unity 2018.3 prefab system
New: Added custom billboard option to billboard generator
New: Added billboard extentions for custom billboard generators

Changed: Added forceNew parameter to InitializeGPUInstancer API method
Changed: Map Magic integration Editor max prefab distance increased to 10000
Changed: Added SetCamera method to Map Magic integration class

Fixed: Can not find manager warning when instances were initialized before the manager with "Auto. Add/Remove Instances" option enabled
Fixed: Map Magic integration Editor not showing prototypes when there are only Trees
Fixed: Map Magic integration Editor not updating shader and billboard bindings

v0.9.2:

New: API Method to define prototypes for procedurally generated GameObjects without prefabs at runtime
New: API Method to add instances to a prototype from a list of GameObjects at runtime
New: API Method to remove prototype definition on the manager at runtime
New: Demo Scene showcasing how to add-remove procedurally generated GameObjects on the Prefab Manager
New: Tree Creator billboards now have their own shader that supports their translucency color

Changed: Enable Auto. Update Transform by default if there is rigidbody on prefab
Changed: Do not create runtimedata when there are no MeshRenderers
Changed: Prefab Manager max distance editor limit increased to 10.000
Changed: Memory optimization on Tree Manager initialization
Changed: Improved SpeedTree billboards

Fixed: UpdateVariationFromArray invalid cast exception for multiple variation with different types
Fixed: Duplicate Hi-Z Generator components when SetCamera is called for the same camera multiple times
Fixed: Tree Manager not calculating prefab scale
Fixed: Missing reference exception when disabling manager for procedurally generated GameObjects
Fixed: Prefab instances duplicating when dropped on the manager multiple times
Fixed: Forward rendering GPUIStandardInclude.cginc fog error for Unity 2018.2.1 and later versions
Fixed: Billboard mesh showing wrong atlas frames on some angles (Requires rebake of previous billboards)
Fixed: Billboard colors and lighting corrected for linear color space
Fixed: Tree Creator trees windzones now work correctly
Fixed: Tree Creator billboards crossfading now works correctly 

v0.9.1:

New: Added support for the High Definition Render Pipeline (HDRP)
New: Added support for the Lightweight Render Pipeline (LWRP)
New: Automatic shader conversion now also works for SRP shaders
New: Added option to use custom Health/Dry noise texture for each detail prototype

Changed: Further optimized Detail Manager memory usage for Android

Fixed: Automatic shader conversion now creates shaders in an internal folder if the original shader is in "Packages" (Package Manager)
Fixed: Error on shader conversion for ShaderGraphs
Fixed: GPUIStandardInclude.cginc errors on some Unity 2017 versions

v0.9.0:

New: Tree Manager for Unity terrain trees
New: Speed Tree support with wind animations
New: Automatic Billboard generation system (designed and tested for Unity terrain trees)
New: Gaia integration
New: "Auto. Add/Remove Instances" option for Prefab Prototypes
New: "Auto. Update Transform Data" option for Prefab Prototypes
New: API Methods to Add-Remove-Update prefab instances without instantiating GameObjects (Demo scene included)
New: API Method to offset transform positions of all instances
New: Shadow rendering performance improvements and LOD settings
New: LOD cross-fade support (with animation or fade transition width)
New: LOD bias adjustments
New: Prefab Scene Importer Tool
New: Custom vertex color wind animation support for Soft Occlusion Tree shaders
New: Limited support for Tree Creator trees
New: Added mobile version of the Prefab Instancing Demo scene with mobile controllers

Changed: Prefab instances in the scene can now also be added to the Prefab Manager to create prototypes
Changed: Furter optimized update functions to reduce overhead on loops
Changed: Mesh Renderer "Cast Shadow" option is taken into consideration when rendering shadows
Changed: Various editor improvements for ease of use

Fixed: Vulkan API detail rendering compute shader error and UAV count warning
Fixed: Vulkan API foliage shader blinking issue
Fixed: Vulkan API not rendering prefabs with more than 3 LOD levels
Fixed: Added Standard shader vairants (Cutout, Transparent, Fade) for instanced shader features not compiling in builds
Fixed: Missing AddRemoveInstancesDemo scene prefab references

v0.8.3:

New: Added Detail Density for Detail Manager

Fixed: SetCamera now does not add the Occlusion Culling buffer to the camera if Occlusion Culling is turned off in the manager.
Fixed: Grass initialization kernel position 0,0 random position and rotation generation problem
Fixed: Prototype list null check on initialization and registered prefabs count check on register

v0.8.2:

Fixed: Multiple fixes and improvements for OpenGL ES 3.1 and Vulkan API on Android target platforms
Fixed: Auto custom shader conversion DateTime error when updating project

v0.8.1:

New: GPU Occlusion Culling (for non-VR platforms)
New: Map Magic integration
New: Max LOD levels increased to 8
New: Detail initialization is now faster
New: Detail spatial partitioning memory and performance optimizations
New: Auto-converted versions of custom shaders are now automatically updated when the originals are modified
New: Option to use original shaders for shadow casters on prototypes that fall outside the view frustum
New: Layers are now taken into consideration with instancing
New: Warning messages in manager editor windows
New: Terrain is now set automatically if Detail Manager is added on the terrain GameObject
New: Additional API methods added to manage registered prefabs
New: Out of bounds check for prefab API methods
New: Added scripting define symbol: GPU_INSTANCER

Changed: Detail simulation improvements, works with frustum culling
Changed: Max detail viewing distance increased to 2500
Changed: LOD calculations now better reflects Unity LOD Group settings
Changed: Custom editor properties are reordered and grouped
Changed: Terrain Proxy will not be added if the manager is already added to terrain
Changed: Removed terrainData reference on TerrainSettings for terrains that are generated from scripts
Changed: PrefabInstancingDemoScene now has its own shader for the Asteroid Haze, which is also instanced as a prefab prototype

Fixed: Prefab Manager Custom Editor null reference exception when manager is disabled at runtime
Fixed: TerrainProxy DestroyImmediate multiple times error when detail manager is added under the terrain GameObject
Fixed: Built-in shader can not be instanced warning loop. Now shows error in custom editor when instanced shader was not able to be created, and throws a warning in play mode
Fixed: Multiple fixes for some iOS, tvOS and macOSX platforms using the Metal API
Fixed: Multiple fixes and improvements for Vulkan API on android target platforms